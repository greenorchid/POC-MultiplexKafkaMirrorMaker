version: "3"

services:
# hub
  kafka-hub: &kafka-hub
    image: docker.io/bitnami/kafka:3.6
    container_name: kafka-hub
    ports:
      - "9092:9092"
      - "9094:9094"
    environment: &kafka_env
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-hub:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-hub:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    healthcheck:
      test: kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  
  kafka-ui-hub: &kafka-ui-hub
    container_name: kafka-ui-hub
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on: &depends-kafka-hub
      kafka-hub: &depends-service_healthy
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-hub:9092

  demux-hub: 
    container_name: demux-hub
    image: hub-demultiplexer
    build:
      context: ./HubDemultiplexer
      dockerfile: ./Dockerfile
    command: ./HubDemultiplexer --bootstrap kafka-hub:9092 --demux-topics mux-replication_spoke1 mux-replication_spoke2
    depends_on: 
      <<: *depends-kafka-hub

# mirror maker
  mirrormaker-spoke1:
    image: kafka-mirrormaker
    build:
      context: ./MirrorMaker
      dockerfile: ./Dockerfile
    container_name: mirrormaker-spoke1
    depends_on:
      <<: *depends-kafka-hub
      kafka-spoke1:
        <<: *depends-service_healthy
      mux-spoke1: &depends-service_started
        condition: service_started
      demux-hub:
        <<: *depends-service_started
    environment:
      <<: *kafka_env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@mirrormaker-spoke1:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://mirrormaker-spoke1:9092,EXTERNAL://localhost:9094
      SOURCE: kafka-spoke1:9092
      DESTINATION: kafka-hub:9092
      TOPICS: mux-replication_spoke1
      GROUP_ID: connect-cluster-spoke1
      CONFIG_STORAGE_TOPIC: mm2-configs-spoke1
      OFFSET_STORAGE_TOPIC: mm2-offsets-spoke1
      STATUS_STORAGE_TOPIC: mm2-status-spoke1

  mirrormaker-spoke2:
    image: kafka-mirrormaker
    container_name: mirrormaker-spoke2
    depends_on:
      <<: *depends-kafka-hub
      kafka-spoke2:
        <<: *depends-service_healthy
      mux-spoke2:
        <<: *depends-service_started
      demux-hub:
        <<: *depends-service_started
    environment:
      <<: *kafka_env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@mirrormaker-spoke2:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://mirrormaker-spoke2:9092,EXTERNAL://localhost:9094
      SOURCE: kafka-spoke2:9092
      DESTINATION: kafka-hub:9092
      TOPICS: mux-replication_spoke2
      GROUP_ID: connect-cluster-spoke2
      CONFIG_STORAGE_TOPIC: mm2-configs-spoke2
      OFFSET_STORAGE_TOPIC: mm2-offsets-spoke2
      STATUS_STORAGE_TOPIC: mm2-status-spoke2

# spoke1
  kafka-spoke1: 
    <<: *kafka-hub
    container_name: kafka-spoke1
    environment:
      <<: *kafka_env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-spoke1:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-spoke1:9092,EXTERNAL://localhost:9094
    ports:
      - "9192:9092"
      - "9194:9094"

  kafka-ui-spoke1:
    <<: *kafka-ui-hub
    container_name: kafka-ui-spoke1
    ports:
      - 8180:8080
    depends_on: &depends-kafka-spoke1
      kafka-spoke1:
        <<: *depends-service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-spoke1:9092

  mux-spoke1: &mux-spoke1
    container_name: mux-spoke1
    image: spoke-multiplexer
    build:
      context: ./SpokeMultiplexer
      dockerfile: ./Dockerfile
    command: ./SpokeMultiplexer --bootstrap kafka-spoke1:9092  --source spoke1 --topics topic1 topic2
    depends_on: 
      <<: *depends-kafka-spoke1
      # needs producer to run to initialize topics
      producer-spoke1-replicated: &depends-service_completed
        condition: service_completed_successfully
      producer-spoke1-replicated2:
        <<: *depends-service_completed

  producer-spoke1-non-replicated:
    container_name: producer-spoke1
    image: spoke-produce-events
    build:
      context: ./SpokeProduceEvents
      dockerfile: ./Dockerfile
    command: ./SpokeProduceEvents --bootstrap kafka-spoke1:9092 --count 3 --topic nonreplicated --msg "non-replicated-message"
    depends_on: 
      <<: *depends-kafka-spoke1

  producer-spoke1-replicated: &producer-spoke1-no-build
    image: spoke-produce-events
    container_name: producer-spoke1-replicated
    command: ./SpokeProduceEvents --bootstrap kafka-spoke1:9092 --count 3 --topic topic1 --msg "replicated-on-topic1"
    depends_on: *depends-kafka-spoke1
    
  producer-spoke1-replicated2: 
    <<: *producer-spoke1-no-build
    container_name: producer-spoke1-replicated2
    command: ./SpokeProduceEvents --bootstrap kafka-spoke1:9092 --count 3 --topic topic2 --msg "replicated-on-topic2"

# spoke2
  kafka-spoke2: 
    <<: *kafka-hub
    container_name: kafka-spoke2
    environment:
      <<: *kafka_env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-spoke2:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-spoke2:9092,EXTERNAL://localhost:9094
    ports:
      - "9292:9092"
      - "9294:9094"

  kafka-ui-spoke2:
    <<: *kafka-ui-hub
    container_name: kafka-ui-spoke2
    ports:
      - 8280:8080
    depends_on: &depends-kafka-spoke2
      kafka-spoke2:
        <<: *depends-service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-spoke2:9092

  mux-spoke2:
    container_name: mux-spoke2
    image: spoke-multiplexer
    command: ./SpokeMultiplexer --bootstrap kafka-spoke2:9092  --source spoke2 --topics topic1 topic2
    depends_on: 
      <<: *depends-kafka-spoke2
      # needs producer to run to initialize topics
      producer-spoke2-replicated:
        <<: *depends-service_completed
      producer-spoke2-replicated2:
        <<: *depends-service_completed

  producer-spoke2-non-replicated: &producer-spoke2
    <<: *producer-spoke1-no-build
    container_name: producer-spoke2
    command: ./SpokeProduceEvents --bootstrap kafka-spoke2:9092 --count 3 --topic nonreplicated --msg "non-replicated-message"
    depends_on: 
      <<: *depends-kafka-spoke2

  producer-spoke2-replicated: 
    <<: *producer-spoke2
    container_name: producer-spoke2-replicated
    command: ./SpokeProduceEvents --bootstrap kafka-spoke2:9092 --count 3 --topic topic1 --msg "spoke2 replicated on topic1"
    
  producer-spoke2-replicated2: 
    <<: *producer-spoke2
    container_name: producer-spoke2-replicated2
    command: ./SpokeProduceEvents --bootstrap kafka-spoke2:9092 --count 3 --topic topic2 --msg "spoke2 replicated on topic2"

